# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
on: [push]

env:
  WORKSPACE: "${{ github.workspace }}"
  JOB_BASE_NAME: "${{ github.workflow }}"
  SERVICE_NAME: mavenapp
  VERSION: ""
  

jobs:
  setup:
    runs-on: [ubuntu-latest]
    name: Setup Stage
    steps:
     - name: Set up JDK
       uses: actions/setup-java@v1
       with:
        java-version: 11.0.2
       
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Display Information
      run: |
            echo "PATH = ${PATH}"
            echo "M2_HOME = ${M2_HOME}"
            echo "Workspace = ${WORKSPACE}"
            echo "Job base name = ${JOB_BASE_NAME}"
            echo "Git Repository = ${{ github.repository }}"
            echo "Github Ref = ${{ github.ref }}"
            echo "Service Name = ${SERVICE_NAME}"
        
    - name: Verify changed projects
      run: |
            git log -1 | grep -i commit | awk '{print $2}' > new_commit
            cat new_commit
            git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/master

            echo "checking git branch"
            git branch -a
            
            git diff HEAD^ HEAD --name-only | awk -F'/' '{print $1}' | grep -vE "solarlint|jenkinsfile|gitignore|.metadata|zip|dataflow|cloud_sql_dumps|parent|groovy" | sort -u > ${JOB_BASE_NAME}_changed_files
            cat ${JOB_BASE_NAME}_changed_files
        
    - name: Build with Maven
      run: |
            cd ${SERVICE_NAME}
            pwd
            ls -ltr
            version=$(grep -oP '<version>(.*)</version>' pom.xml | head -1 | cut -d '>' -f 2 | cut -d '<' -f 1)
            echo "VERSION=$version" >> $GITHUB_ENV
            echo "version:$version"
            echo "Creating maven build for $service..."
            mvn clean package
            ls -ltr
   
    - name: Push build to artifactory
      run: |
            pwd
            cd ${SERVICE_NAME}/target
            ls -ltr
            mv *.jar maven_build_${{ env.VERSION }}.jar
            ls -ltr
